#------------------------------------------------------------------------
# Date Originally Written: 12/2020
# Kata Link: https://www.codewars.com/kata/552ec968fcd1975e8100005a/python
# Kata Description: "The internet is a very confounding place for some adults.
# Tom has just joined an online forum and is trying to fit in with all the
# teens and tweens. It seems like they're speaking in another language! Help
# Tom fit in by translating his well-formatted English into n00b language.
# The following rules should be observed:
# >"to" and "too" should be replaced by the number 2, even if they are only
# part of a word (E.g. today = 2day)
# >Likewise, "for" and "fore" should be replaced by the number 4
# >Any remaining double o's should be replaced with zeros (E.g. noob = n00b)
# >"be", "are", "you", "please", "people", "really", "have", and "know" should
# be changed to "b", "r", "u", "plz", "ppl", "rly", "haz", and "no"
# respectively (even if they are only part of the word)
# >When replacing words, always maintain case of the first letter unless
# another rule forces the word to all caps.
# >The letter "s" should always be replaced by a "z", maintaining case
# >"LOL" must be added to the beginning of any input string starting with a
# "w" or "W"
# >"OMG" must be added to the beginning (after LOL, if applicable,) of a
# string 32 characters1 or longer
# >All evenly numbered words2 must be in ALL CAPS (Example: Cake is very
# delicious. becomes Cake IZ very DELICIOUZ)
# >If the input string starts with "h" or "H", the entire output string
# should be in ALL CAPS
# >Periods ( . ), commas ( , ), and apostrophes ( ' ) are to be removed
# >A question mark ( ? ) should have more question marks added to it, equal
# to the number of words in the sentence (Example: Are you a foo? has 4 words,
# so it would be converted to r U a F00????)
# >Similarly, exclamation points ( ! ) should be replaced by a series of
# alternating exclamation points and the number 1, equal to the number of
# words in the sentence (Example: You are a foo! becomes u R a F00!1!1)
# >Characters should be counted After: any word conversions, adding additional
# words, and removing punctuation. Excluding: All punctuation and any 1's
# added after exclamation marks ( ! ). Character count includes spaces.
# >For the sake of this kata, "words" are simply a space-delimited substring,
# regardless of its characters. Since the output may have a different number
# of words than the input, words should be counted based on the output string.
# Example: whoa, you are my 123 <3 becomes LOL WHOA u R my 123 <3 = 7 words"
#------------------------------------------------------------------------

import re


def shorten(match_obj):
    if match_obj.group().lower() == 'be': replacement = 'b'
    elif match_obj.group().lower() == 'are': replacement = 'r'
    elif match_obj.group().lower() == 'you': replacement = 'u'
    elif match_obj.group().lower() == 'please': replacement = 'plz'
    elif match_obj.group().lower() == 'people': replacement = 'ppl'
    elif match_obj.group().lower() == 'really': replacement = 'rly'
    elif match_obj.group().lower() == 'have': replacement = 'haz'
    else: replacement = 'no'

    if match_obj.group().islower(): return replacement.lower()
    if match_obj.group().istitle(): return replacement.title()
    if match_obj.group().isupper(): return replacement.upper()
    
    
def n00bify(text):
    org_text = text
    
    if text[0].upper() == 'W': text = 'LOL ' + text
    text = re.sub('(to{1,2})', '2', text, flags=re.I)
    text = re.sub('(fore?)', '4', text, flags=re.I)
    text = re.sub('(oo)', '00', text, flags=re.I)
    text = re.sub('(be)|(are)|(you)|(please)|(people)|(really)|(have)|(know)',
                  shorten, text, flags=re.I)
    text = re.sub('s', 'z', text)
    text = re.sub('S', 'Z', text)
    text = re.sub('[\.,\']', '', text)
    text = re.sub('S', 'Z', text)
    if len(re.sub('[^a-zA-Z0-9 ]', '', text)) >= 32:
        if text[:3] == 'LOL': text = text.replace('LOL', 'LOL OMG', 1)
        else: text = 'OMG ' + text
    if org_text[0].upper() == 'H': text = text.upper()
    else: text = ' '.join([[word.upper(), word][(index+1)%2] for index, word in
                            enumerate(text.split())])
    text = re.sub('\?+', '?', text)
    text = text.replace('?', '?'*len(text.split()))
    text = re.sub('!+', '!', text)
    text = text.replace('!', ''.join([['!', '1'][count%2] for count in
                                      range(0, len(text.split()))]))
