#------------------------------------------------------------------------
# Kata Link: https://www.codewars.com/kata/52b7ed099cdc285c300001cd
# Kata Description: "Write a function called sum_intervals() that accepts
# an array of intervals, and returns the sum of all the interval lengths.
# Overlapping intervals should only be counted once.
# Intervals are represented by a pair of integers in the form of an array.
# The first value of the interval will always be less than the second value.
# Interval example: (1, 5) is an interval from 1 to 5. 
# The length of this interval is 4.
# Overlapping Intervals - Example of list containing overlapping intervals:
# [(1,4), (7, 10), (3, 5)].
# The sum of the lengths of these intervals is 7. 
# Since (1, 4) and (3, 5) overlap, we can treat the interval as (1, 5),
# which has a length of 4."
#------------------------------------------------------------------------


def consolidate_intervals(intervals):
    idx = 0
    while idx < len(intervals) - 1:
        if intervals[idx][1] >= intervals[idx + 1][0]:
            if intervals[idx][1] < intervals[idx + 1][1]:
                intervals.insert(idx,
                                 (intervals[idx][0], intervals[idx + 1][1]))
                intervals.pop(idx + 1)
            intervals.pop(idx + 1)
        else:
            idx += 1
    return intervals


def sum_of_intervals(intervals):
    intervals.sort()
    consolidate_intervals(intervals)
    return sum([j - i for (i, j) in intervals])
