#------------------------------------------------------------------------
# Date Originally Written: 10/2020
# Kata Description: "Consider the sequence U(n, x) = x + 2x**2 + 3x**3 +
# .. + nx**n where x is a real number and n a positive integer.
# When n goes to infinity and x has a correct value (ie x is in its domain
# of convergence D), U(n, x) goes to a finite limit m depending on x.
# Usually given x we try to find m. Here we will try to find x (x real,
# 0 < x < 1) when m is given (m real, m > 0).
# Let us call solve the function solve(m) which returns x such as U(n, x)
# goes to m when n goes to infinity.
# Examples:
# solve(2.0) returns 0.5 since U(n, 0.5) goes to 2 when n goes to infinity.
# solve(8.0) returns 0.7034648345913732 since U(n, 0.7034648345913732)
# goes to 8 when n goes to infinity.
# Note:
# You pass the tests if abs(actual - expected) <= 1e-12"
#------------------------------------------------------------------------

import math 


def solve(m):
    # The Series nx^n can be written as S = x(1 - x^n)/(1 - x)^2 - n(x^n+1)/(1 - x)
    # At n --> inifinity, the series becomes, S = x/(1 - x)^2
    # Therefore, if S = m, then m(x^2) - (2m + 1)x + m = 0
    # Hence, we only need to find the roots of the quadratic eq. < 1
    return ((2*m + 1) - math.sqrt((2*m + 1)**2 - 4*m*m))/(2*m)
