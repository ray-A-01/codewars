#------------------------------------------------------------------------
# Date Originally Written: 12/2020
# Kata Link: https://www.codewars.com/kata/5531abe4855bcc8d1f00004c/python
# Kata Description: "In the game of ten-pin bowling, a player rolls a bowling
# ball down a lane to knock over pins. There are ten pins set at the end of
# the bowling lane. Each player has 10 frames to roll a bowling ball down a
# lane and knock over as many pins as possible. The first nine frames are
# ended after two rolls or when the player knocks down all the pins. The last
# frame a player will receive an extra roll every time they knock down all ten
# pins; up to a maximum of three total rolls.
# The Challenge:
# In this challenge you will be given a string representing a player's ten
# frames. It will look something like this: 'X X 9/ 80 X X 90 8/ 7/ 44' 
# (in Java: "X X 9/ 80 X X 90 8/ 7/ 44"), where each frame is space-delimited,
# 'X' represents strikes, and '/' represents spares. Your goal is take in this
# string of frames into a function called bowlingScore and return the players
# total score."
#------------------------------------------------------------------------


def bowling_score(frames):
    # Initializing variables
    total_points = 0
    roll_details = []
    # Getting roll details- points*, # of following rolls to consider,
    # and the frame that the roll belongs to. 
    # *the points assc. with a roll will not take into account next
    # rolls for now.
    for frame_id, frame in enumerate(frames.split()):
        for roll in frame:
            if roll == 'X': 
                roll_details.append([10, 2, frame_id + 1])
            elif roll == '/': 
                roll_details.append([10 - prev_role_score, 1,frame_id + 1])
            else: 
                roll_details.append([int(roll), 0, frame_id + 1])
                prev_role_score = int(roll)
    # Adding the exra points to take into account for strikes and spares.
    for roll_id, roll in enumerate(roll_details):
        total_points += roll[0] + sum([roll_details[roll_id + next_roll + 1][0]
                                        for next_roll in range(0, roll[1]) 
                                        if roll[2] != 10])
    return total_points
