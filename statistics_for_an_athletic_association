#------------------------------------------------------------------------
# Date Originally Written: 04/2021
# Kata Link: https://www.codewars.com/kata/55b3425df71c1201a800009c/python
# Kata Description: "You are the "computer expert" of a local Athletic
# Association (C.A.A.). Many teams of runners come to compete. Each time
# you get a string of all race results of every team who has run. For example
# here is a string showing the individual results of a team of 5 runners:
# "01|15|59, 1|47|6, 01|17|20, 1|32|34, 2|3|17";
# Each part of the string is of the form: h|m|s where h, m, s (h for hour
# m for minutes, s for seconds) are positive or null integer (represented as
# strings) with one or two digits. There are no traps in this format.
# To compare the results of the teams you are asked for giving three
# statistics; range, average and median.
# Your task is to return a string giving these 3 values. For the example
# given above, the string result will be
# "Range: 00|47|18 Average: 01|35|15 Median: 01|32|34"
# of the form: "Range: hh|mm|ss Average: hh|mm|ss Median: hh|mm|ss"`
# #where hh, mm, ss are integers (represented by strings) with each 2 digits.
# Remarks:
# >if a result in seconds is ab.xy... it will be given truncated as ab.
# >if the given string is "" you will return """
#------------------------------------------------------------------------

from datetime import timedelta as td
import re
import statistics as st


def stat(strg):
    if strg != "":
        list_of_times = strg.split(',')
    else:
        return ""
    time_regex = re.compile(r'(\d{1,2})\|(\d{1,2})\|(\d{1,2})')
    # Converting all times to seconds.
    list_of_times_in_secs = []
    for time_str in list_of_times:
        time_segments = re.search(time_regex, time_str)
        list_of_times_in_secs.append(int(time_segments[1])*3600 
                                     + int(time_segments[2])*60 
                                     + int(time_segments[3]) )
    # Calculating the metrics.
    avg_time = td(seconds=int(st.mean(list_of_times_in_secs)))
    median_time = td(seconds=int(st.median(list_of_times_in_secs)))
    time_range = td(seconds=int(max(list_of_times_in_secs) 
                                  - min(list_of_times_in_secs)))
    
    return 'Range: {:0>8} Average: {:0>8} Median: {:0>8}'.format(
                                               str(time_range).replace(':','|'),
                                               str(avg_time).replace(':','|'),
                                               str(median_time).replace(':','|'))
